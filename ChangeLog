=== release 1.22.6 ===

2023-09-20 18:10:57 +0100  Tim-Philipp Müller <tim@centricular.com>

	* NEWS:
	* RELEASE:
	* gstreamer-vaapi.doap:
	* meson.build:
	  Release 1.22.6

2023-07-20 16:57:47 +0100  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  Back to development
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/5082>

=== release 1.22.5 ===

2023-07-20 15:22:48 +0100  Tim-Philipp Müller <tim@centricular.com>

	* NEWS:
	* RELEASE:
	* gstreamer-vaapi.doap:
	* meson.build:
	  Release 1.22.5

2022-05-20 09:59:58 +0200  Víctor Manuel Jáquez Leal <vjaquez@igalia.com>

	* gst/vaapi/gstvaapidecode.c:
	* gst/vaapi/gstvaapipostproc.c:
	  vaapidecode,vaapipostproc: Disable DMAbuf from caps negotiation
	  Given the amount of complains about artifacts when negotiating dmabuf
	  given incompatible drm-formats, and that there's no enough bandwidth
	  for a proper and quick fix in gstreamer-vaapi, this patch disables,
	  from decoders and postprocessor, the DMABuf caps feature.
	  For those who needs DMABuf can use the va elements in -bad, increasing
	  their ranking for autoplugging by using the environment variable
	  GST_PLUGIN_FEATURE_RANK=vah264dec:MAX, for example.
	  This can be considered a first step to the deprecation of
	  gstreamer-vaapi in favor of the va plugin in -bad.
	  Fixes: #1137
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/5029>

2023-06-20 19:10:38 +0100  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  Back to development
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/4907>

=== release 1.22.4 ===

2023-06-20 17:42:25 +0100  Tim-Philipp Müller <tim@centricular.com>

	* NEWS:
	* RELEASE:
	* gstreamer-vaapi.doap:
	* meson.build:
	  Release 1.22.4

2023-05-19 13:14:09 +0200  Víctor Manuel Jáquez Leal <vjaquez@igalia.com>

	* gst/vaapi/gstvaapidecodebin.c:
	  vaapidecodebin: don't load vaapipostproc if not available
	  And remove the code for missing element since that element is part of the same
	  plugin, and if not available is because the driver doesn't provide it.
	  Fixes: #2580
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/4871>

2023-05-19 12:36:19 +0100  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  Back to development
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/4679>

=== release 1.22.3 ===

2023-05-19 09:23:19 +0100  Tim-Philipp Müller <tim@centricular.com>

	* NEWS:
	* RELEASE:
	* gstreamer-vaapi.doap:
	* meson.build:
	  Release 1.22.3

2023-04-12 00:31:17 +0100  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  Back to development

=== release 1.22.2 ===

2023-04-11 17:29:28 +0100  Tim-Philipp Müller <tim@centricular.com>

	* NEWS:
	* RELEASE:
	* gstreamer-vaapi.doap:
	* meson.build:
	  Release 1.22.2

2023-03-04 16:13:04 +0000  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  Back to development

=== release 1.22.1 ===

2023-03-04 13:42:32 +0000  Tim-Philipp Müller <tim@centricular.com>

	* NEWS:
	* RELEASE:
	* gstreamer-vaapi.doap:
	* meson.build:
	  Release 1.22.1

2023-01-24 02:52:49 +0000  Jan Alexander Steffens (heftig) <heftig@archlinux.org>

	* meson.build:
	  vaapi: Skip plugin pc file for shared plugins
	  Following similar logic in the other subprojects.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/3778>

2023-01-25 16:46:42 +0000  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  Back to development

=== release 1.22.0 ===

2023-01-23 19:29:34 +0000  Tim-Philipp Müller <tim@centricular.com>

	* NEWS:
	* RELEASE:
	* gstreamer-vaapi.doap:
	* meson.build:
	  Release 1.22.0

=== release 1.21.90 ===

2023-01-13 19:08:48 +0000  Tim-Philipp Müller <tim@centricular.com>

	* NEWS:
	* RELEASE:
	* gstreamer-vaapi.doap:
	* meson.build:
	  Release 1.21.90

2021-11-07 11:18:15 +1100  Brad Hards <bradh@frogmouth.net>

	* gst-libs/gst/vaapi/gstvaapidecoder_h264.c:
	  h264parser: typo fix in enum value
	  Old value is marked deprecated, new enum with same entry is added. Should be binary compatible.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/1318>

2022-12-10 13:11:08 +0000  Tim-Philipp Müller <tim@centricular.com>

	* gst-libs/gst/vaapi/gstvaapicontext.c:
	* gst-libs/gst/vaapi/gstvaapidisplay.c:
	* gst-libs/gst/vaapi/gstvaapidisplay_egl.c:
	* gst-libs/gst/vaapi/gstvaapisurface_egl.c:
	* gst-libs/gst/vaapi/video-format.c:
	* gst/vaapi/gstvaapi.c:
	* gst/vaapi/gstvaapidecode.c:
	* gst/vaapi/gstvaapidecodebin.c:
	* gst/vaapi/gstvaapipluginbase.c:
	* gst/vaapi/gstvaapipluginutil.c:
	* gst/vaapi/gstvaapipostproc.c:
	* gst/vaapi/gstvaapisink.c:
	* gst/vaapi/gstvaapivideobufferpool.c:
	* gst/vaapi/gstvaapivideocontext.c:
	* gst/vaapi/gstvaapivideometa_texture.c:
	* meson.build:
	* tests/internal/output.c:
	* tests/internal/test-display.c:
	* tests/internal/test-windows.c:
	  vaapi: prefix USE_FOO defines to fix build with mesa 22.3.0
	  Apparently mesa 22.3.0 has updated the egl headers, and eglplatform.h now
	  contains commit
	  https://github.com/KhronosGroup/EGL-Registry/pull/130/commits/3670d645f4a26a0a9e87e7f3a8608e7cc1d53b5b
	  after which xlib headers don't get included by default anymore but are
	  dependent upon whether USE_X11 was defined.
	  This breaks headless builds of gstreamer-vaapi because we always define
	  an internal define USE_X11 as either 1 or 0.
	  Change these defines to GST_VAAPI_USE_XYZ instead to avoid this.
	  Fixes #1634
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/3555>

2022-12-05 02:29:08 +0000  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  Back to development

=== release 1.21.3 ===

2022-12-05 01:28:21 +0000  Tim-Philipp Müller <tim@centricular.com>

	* NEWS:
	* RELEASE:
	* gstreamer-vaapi.doap:
	* meson.build:
	  Release 1.21.3

2022-12-04 12:25:41 +0000  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	  Remove ChangeLog files from git repository
	  This information is tracked fully in the git repository, so
	  no point having the ChangeLog duplicate it, and it interferes
	  with grepping the repository.
	  We are going to create the ChangeLogs on the fly when generating
	  tarballs going forward (with a limited history), since it's still
	  valuable for tarball consumers to be able to easily see a list of
	  recent changes.
	  Fixes https://gitlab.freedesktop.org/gstreamer/gstreamer-project/-/issues/73
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/3521>

2022-11-07 00:10:39 +0000  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	* scripts/gen-changelog.py:
	  meson: Generate ChangeLog files for release tarballs on dist
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/3521>

2022-11-14 15:59:37 +0800  Mengkejiergeli Ba <mengkejiergeli.ba@intel.com>

	* gst/vaapi/gstvaapipostproc.c:
	  vaapipostproc: Fix the negotiation failure of some formats
	  This patch fixes issue https://gitlab.freedesktop.org/gstreamer/gstreamer/-/issues/1565
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/3399>

2022-11-02 17:23:04 -0400  Boyuan Zhang <boyuan.zhang@amd.com>

	* gst-libs/gst/vaapi/gstvaapicontext.c:
	  libs: context: use queried value for attrib
	  Attribute's value should use returned value from get_attribute for
	  VAConfigAttribRTFormat, since VAProfileHEVCMain10, in AMD Mesa Gallium,
	  can process either VA_RT_FORMAT_420 and VA_RT_FORMAT_420_10, which isn't
	  considered in gstreamer-vaapi design, where encoder's src pads will
	  expose only 4:2:0 color formats but no 4:2:0 10bit. So, this is a workaround
	  for this issue while new vah265enc is released.
	  Signed-off-by: Boyuan Zhang <boyuan.zhang@amd.com>
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/3397>

2022-09-20 17:39:39 +0100  Colin Kinloch <colin.kinloch@collabora.com>

	* gst/vaapi/gstvaapipostproc.c:
	  vaapi: Use gst_video_orientation_from_tag to parse orientation
	  Signed-off-by: Colin Kinloch <colin.kinloch@collabora.com>
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/3053>

2021-10-29 15:08:38 +0800  Mengkejiergeli Ba <mengkejiergeli.ba@intel.com>

	* gst/vaapi/gstvaapipluginutil.c:
	  vaapi: Add new dmabuf mem type when building caps
	  Media-driver will return dmabuf mem type GST_VAAPI_BUFFER_MEMORY_TYPE_DMA_BUF2
	  on the latest platform like Gen12. To enable build caps using dmabuf, need to
	  add the check for this type at gst_vaapi_build_caps_from_format.
	  This patch is a portion from Junyan.He@intel.com
	  https://gitlab.freedesktop.org/gstreamer/gstreamer-vaapi/-/merge_requests/393
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/1287>

2021-10-29 14:31:14 +0800  Mengkejiergeli Ba <mengkejiergeli.ba@intel.com>

	* gst-libs/gst/vaapi/gstvaapifilter.c:
	* gst-libs/gst/vaapi/gstvaapifilter.h:
	* gst/vaapi/gstvaapipostproc.c:
	* tests/internal/test-filter.c:
	  vaapipostproc: Enable to use DMABuf mem at sink and src pad
	  Enable DMABuf mem at both sink and src pad for vaapipostproc caps which
	  helps to apply DMABuf for more generic use cases: such as "! vaapih264dec !
	  video/x-raw(memory:DMABuf) ! vaapipostproc ! video/x-raw (memory:DMABuf)
	  ! vaapih265enc"  . Or other mem converions like from DMABuf to VASurface
	  through vaapipostproc.
	  This patch is a portion from Junyan.He@intel.com
	  https://gitlab.freedesktop.org/gstreamer/gstreamer-vaapi/-/merge_requests/393
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/1287>

2022-11-08 02:08:08 +0000  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  Back to development
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/3358>

=== release 1.21.2 ===

2022-11-07 23:53:59 +0000  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* gstreamer-vaapi.doap:
	* meson.build:
	  Release 1.21.2

2022-11-07 23:53:57 +0000  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	  Update ChangeLogs for 1.21.2

2022-09-23 17:18:35 +0200  Stéphane Cerveau <scerveau@igalia.com>

	* gst-libs/gst/vaapi/gstvaapidecoder_h265.c:
	  h265parse: fix typo in member of GstH265SPS
	  Rename sps_extnsion_params to sps_extension_params
	  Fix comment about vui_parameters_present_flag
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/3072>

2022-10-04 03:57:31 +0100  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  Back to development
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/3115>

=== release 1.21.1 ===

2022-10-04 01:14:01 +0100  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	* NEWS:
	* RELEASE:
	* gstreamer-vaapi.doap:
	* meson.build:
	  Release 1.21.1

2022-10-04 01:13:59 +0100  Tim-Philipp Müller <tim@centricular.com>

	* ChangeLog:
	  Update ChangeLogs for 1.21.1

2022-09-21 19:19:45 +0530  Nirbheek Chauhan <nirbheek@centricular.com>

	* meson.build:
	  meson: Use implicit builtin dirs in pkgconfig generation
	  Starting with Meson 0.62, meson automatically populates the variables
	  list in the pkgconfig file if you reference builtin directories in the
	  pkgconfig file (whether via a custom pkgconfig variable or elsewhere).
	  We need this, because ${prefix}/libexec is a hard-coded value which is
	  incorrect on, for example, Debian.
	  Bump requirement to 0.62, and remove version compares that retained
	  support for older Meson versions.
	  Fixes https://gitlab.freedesktop.org/gstreamer/gstreamer/-/issues/1245
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/3061>

2022-09-01 15:11:31 -0400  Thibault Saunier <tsaunier@igalia.com>

	* meson.build:
	  meson: Call pkgconfig.generate in the loop where we declare plugins dependencies
	  Removing some copy pasted code
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/2970>

2022-09-01 11:51:48 -0400  Thibault Saunier <tsaunier@igalia.com>

	* docs/meson.build:
	  meson: Namespace the plugins_doc_dep/libraries variables
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/2970>

2022-08-31 18:44:14 -0400  Thibault Saunier <tsaunier@igalia.com>

	* meson.build:
	  meson: Rename plugins list and make them "dependency" objects
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/2970>

2022-05-31 15:18:03 +0200  Stéphane Cerveau <scerveau@collabora.com>

	* docs/meson.build:
	* meson.build:
	  docs: disable in static build
	  Following gst-plugins-base, disable docs if static_build
	  in:
	  - gstreamer
	  - gst-plugins-good
	  - gst-plugins-ugly
	  - gst-libav
	  - gstreamer-vaapi
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/2529>

2022-08-11 21:22:12 +0200  Víctor Manuel Jáquez Leal <vjaquez@igalia.com>

	* gst-libs/gst/vaapi/gstvaapidisplay.c:
	* gst/vaapi/gstvaapi.c:
	* gst/vaapi/gstvaapidecode.c:
	  vaapi: plugin: Handle when no encoders/decoders available.
	  Nouveau driver currently only exposes postproc entry. But
	  vaapidecodebin is registered independent if there are decoders or not,
	  exposing a segmentation fault.
	  This patch removes the encoder/decoder/codec arrays if no entries are
	  found, and if no decoders are found vaapidecodebin is not
	  registered. Also for vaapipostproc if no postproc entry is found.
	  Also, if general decoder, used by vaapidecodebin, doesn't have a sink
	  pad string, don't register the glib type.
	  Fixes: #1349
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/2865>

2022-07-27 08:45:45 -0400  U. Artie Eoff <ullysses.a.eoff@intel.com>

	* gst-libs/gst/vaapi/gstvaapidecoder_h265.c:
	  vaapi: h265dec: avoid possible NULL deref
	  Check "pi" before attempting to dereference it.
	  Captured by static analysis.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/2801>

2022-07-26 12:12:50 -0400  Nicolas Dufresne <nicolas.dufresne@collabora.com>

	* gst-libs/gst/vaapi/gstvaapidecoder_h265.c:
	  vaapi: h264dec: Remove dead code
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/2795>

2022-07-26 12:22:10 -0400  Nicolas Dufresne <nicolas.dufresne@collabora.com>

	* gst-libs/gst/vaapi/gstvaapidecoder_h265.c:
	  vaapi: h265dec: Refresh our sps/pps copy
	  The decoder uses a copy of the SPS/PPS. Since
	  https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/2575
	  the SPS/PPS is updated when the slice header is parsed. As a side
	  effect, the H265 decoder was using an partially filled copy.
	  Fixes: 5ae05bb42a ("codecparsers: Defering computation of pps and sps fields")
	  Fixes: #1343
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/2795>

2022-06-09 20:00:35 +0800  He Junyan <junyan.he@intel.com>

	* gst-libs/gst/vaapi/gstvaapifilter.c:
	  vaapi: Do not disable the whole vpp when some va operations not available.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/2578>

2022-05-26 12:08:44 -0400  U. Artie Eoff <ullysses.a.eoff@intel.com>

	* tests/check/elements/vaapioverlay.c:
	  tests: vaapi: remove unused header
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/2503>

2022-05-26 12:06:43 -0400  U. Artie Eoff <ullysses.a.eoff@intel.com>

	* tests/check/elements/vaapioverlay.c:
	  tests: vaapi: fix memleak in vaapioverlay test
	  Need to unmap the frame to ensure vaapioverlay can destruct/dispose.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/2503>

2022-04-12 15:23:08 +0300  Sebastian Dröge <sebastian@centricular.com>

	* gst-libs/gst/vaapi/gstvaapivalue.c:
	  Fix `transfer` gobject-introspection annotation typos
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/2160>

2022-03-30 11:06:02 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* meson.build:
	  Use gmodule-no-export-2.0
	  We don't need `-Wl,--export-dynamic`, that's used only for executables
	  that needs to export an API to be used by plugins they load.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/2031>

2022-03-25 15:00:20 -0400  Xavier Claessens <xavier.claessens@collabora.com>

	* gst-libs/gst/vaapi/gstvaapifilter.c:
	* meson.build:
	  Remove glib and gobject dependencies everywhere
	  They are part of gst_dep already and we have to make sure to always have
	  gst_dep. The order in dependencies matters, because it is also the order
	  in which Meson will set -I args. We want gstreamer's config.h to take
	  precedence over glib's private config.h when it's a subproject.
	  While at it, remove useless fallback args for gmodule/gio dependencies,
	  only gstreamer core needs it.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/2031>

2021-09-11 12:17:56 -0300  Thibault Saunier <tsaunier@igalia.com>

	* docs/gst_plugins_cache.json:
	* meson_options.txt:
	  tools: Add support for building gstreamer tools against gst-full
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/1581>

2022-03-18 16:59:32 +0000  Thibault Saunier <tsaunier@igalia.com>

	* tests/check/elements/vaapipostproc.c:
	  navigation: Add support for key Modifiers in all relevant events
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/2010>

2022-02-14 16:08:23 +0100  Vivienne Watermeier <vwatermeier@igalia.com>

	* gst/vaapi/gstvaapipostproc.c:
	* gst/vaapi/gstvaapisink.c:
	* tests/check/elements/vaapipostproc.c:
	  all: Use new navigation interface and API
	  Use and implement the new navigation interface in all relevant sink elements,
	  and use API functions everywhere instead of directy accessing the event structure.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/1633>

2022-03-16 13:17:21 -0400  Nicolas Dufresne <nicolas.dufresne@collabora.com>

	* gst-libs/gst/vaapi/gstvaapidecoder_av1.c:
	  codecs: av1: Fix state when we show existing keyframe
	  Showing existing keyframe have special meaning in AV1. All the references
	  frame will be refreshed with the original keyframe information. The refresh
	  process (7.20) is implemented by saving data from the frame_header into the
	  state. To fix this special case, load all the relevant information into the
	  frame_header.
	  As there is nothing happening in between this and the loading of the key-frame
	  into the state, this patch also remove the separate API function, using it
	  internally instead.
	  Fixes #1090
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/1971>

2022-03-18 13:42:27 +0530  Nirbheek Chauhan <nirbheek@centricular.com>

	* meson.build:
	  meson: Bump all meson requirements to 0.60
	  Lots of new warnings ever since
	  https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/1934
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/1977>

2022-03-08 14:54:34 +0800  GuYanjie <yanjie.gu@intel.com>

	* gst-libs/gst/vaapi/gstvaapidecoder_h265.c:
	  vaapih265dec: fixed st_rps_bits setting in h265 decoding.
	  According to va_dec_hevc.h, pic_param->st_rps_bits should be set
	  for accelorater to skip parsing the *short_term_ref_pic_set
	  (num_short_term_ref_pic_sets) structure.
	  Also modified fill_picture to get parser info as a parameter,
	  in order to get slide_hdr->short_term_ref_pic_set_size.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/1886>

2021-11-19 18:47:24 -0800  Haihao Xiang <haihao.xiang@intel.com>

	* gst-libs/gst/vaapi/gstvaapiblend.c:
	* gst/vaapi/gstvaapioverlay.c:
	* gst/vaapi/gstvaapioverlay.h:
	  vaapioverlay: inline sinkpad scaling support
	  Often, users will need to scale inputs (e.g.
	  with vaapipostproc) before they are submitted
	  to the vaapioverlay.  However, this results in
	  multiple VPP passes/operations in the pipeline
	  which creates unnecessary process overhead.
	  This change allows for inputs to be submitted
	  at original scale to vaapioverlay with per-sinkpad
	  scale dimensions specified so they can be scaled
	  and blended/composited in a single VPP pass/operation
	  to avoid the unnecessary process overhead.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/1380>

2021-11-19 14:46:34 -0800  U. Artie Eoff <ullysses.a.eoff@intel.com>

	* gst-libs/gst/vaapi/gstvaapiblend.c:
	  vaapioverlay: use vpp blend state iif using alpha
	  Don't set VAAPI vpp blend flags if alpha == 1.0,
	  i.e. fully opaque.  This can avoid extra processing
	  overhead on some drivers that apply blending
	  unconditionally when flags are present, even if the
	  end result is the same without blend flags (i.e. all
	  opaque alpha channels).
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/1380>

2022-02-09 06:01:34 +0100  Víctor Manuel Jáquez Leal <vjaquez@igalia.com>

	* meson.build:
	* meson_options.txt:
	  vaapi: Use meson's features for option selection.
	  Modernize option selection, so if a required dependency is missing,
	  produce a meaningful error message.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/1676>

2021-09-30 17:42:19 +0200  Víctor Manuel Jáquez Leal <vjaquez@igalia.com>

	* meson.build:
	  build: Add libva dependency fallback.
	  Then libva can be subproject and used by either gstreamer-vaapi,
	  va and msdk in gst-plugins-bad.
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/1397>

2022-02-04 11:15:47 +0000  Tim-Philipp Müller <tim@centricular.com>

	* meson.build:
	  Back to development
	  Part-of: <https://gitlab.freedesktop.org/gstreamer/gstreamer/-/merge_requests/1635>

=== release 1.20.0 ===

